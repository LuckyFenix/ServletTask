package com.luckyfenix.servlets;import com.luckyfenix.entity.User;import com.luckyfenix.help.DBI;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;import java.io.PrintWriter;import java.sql.ResultSet;import java.sql.SQLException;import java.sql.Statement;import java.text.SimpleDateFormat;import java.util.ArrayList;/** * Created by LuckyFenix on 07.07.2014. */public class UserList extends HttpServlet{    private SimpleDateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy");    private Statement st;    private DBI dbi;    private ResultSet rs;    @Override    public void init() throws ServletException    {        try        {            dbi = new DBI();            st = dbi.getSt();            st.execute("CREATE TABLE IF NOT EXISTS `users` (\n" +                    "  `id` int(5) NOT NULL AUTO_INCREMENT,\n" +                    "  `login` text NOT NULL,\n" +                    "  `password` text NOT NULL,\n" +                    "  `email` text NOT NULL,\n" +                    "  `reg_date` date NOT NULL,\n" +                    "  `is_admin` tinyint(1) NOT NULL DEFAULT '0',\n" +                    "  PRIMARY KEY (`id`)\n" +                    ") ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;");            st.close();            dbi.close();        } catch (SQLException e)        {            e.printStackTrace();        }    }    @Override    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException    {        response.setContentType("text/html;charset=utf-8");        response.setCharacterEncoding("utf8");        PrintWriter out = response.getWriter();        String query = request.getParameter("query");        out.println("<html><head>");        out.println("<title>Список пользователей</title>");        out.println("</head><body>");        ArrayList<User> usersList = new ArrayList<>();        User u = (User) request.getSession().getAttribute("user");        if (u != null && u.isAdmin())        {            try            {                dbi = new DBI();                st = dbi.getSt();                rs = st.executeQuery("SELECT * FROM users " +                        "ORDER BY login ASC;");                while (rs.next())                {                    usersList.add(new User(rs.getInt("id"),                            rs.getString("login"),                            rs.getString("password"),                            rs.getString("email"),                            rs.getDate("reg_date"),                            rs.getBoolean("is_admin")));                }                rs.close();                st.close();                dbi.close();            } catch (SQLException e)            {                e.printStackTrace();            }            out.println("<form action=\"user_list.jsp\" method=\"get\">");            out.println("<input type=\"text\" name=\"query\">");            out.println("<input type=\"submit\" value=\"Поиск\">");            if (query == null)            {                out.println("<table border=\"1\">");                out.println("<tr>");                out.println("<th>id</th>");                out.println("<th>Логин</th>");                out.println("<th>Пароль</th>");                out.println("<th>Email</th>");                out.println("<th>Дата регистрации</th>");                out.println("<th>Админ</th>");                out.println("</tr>");                for (User user : usersList)                {                    out.println("<tr>");                    out.println("<td>" + user.getId() + "</td>");                    out.println("<td>" + user.getLogin() + "</td>");                    out.println("<td>" + user.getPassword() + "</td>");                    out.println("<td>" + user.getEmail() + "</td>");                    out.println("<td>" + dateFormat.format(user.getRegDate()) + "</td>");                    out.println("<td><input type=\"checkbox\"" + (user.isAdmin() ? " checked>" : ">") + "</td>");                    out.println("</tr>");                }            } else            {                ArrayList<User> selectedUsers = new ArrayList<>();                for (User user : usersList)                {                    if (user.getLogin().contains(query) || user.getEmail().contains(query))                    {                        selectedUsers.add(user);                    }                }                if (selectedUsers.size() > 0)                {                    out.println("<table border=\"1\">");                    out.println("<tr>");                    out.println("<th>id</th>");                    out.println("<th>Логин</th>");                    out.println("<th>Пароль</th>");                    out.println("<th>Email</th>");                    out.println("<th>Дата регистрации</th>");                    out.println("<th>Админ</th>");                    out.println("</tr>");                    for (User user : selectedUsers)                    {                        out.println("<tr>");                        out.println("<td>" + user.getId() + "</td>");                        out.println("<td>" + distinguish(user.getLogin(), query) + "</td>");                        out.println("<td>" + user.getPassword() + "</td>");                        out.println("<td>" + distinguish(user.getEmail(), query) + "</td>");                        out.println("<td>" + dateFormat.format(user.getRegDate()) + "</td>");                        out.println("<td><input type=\"checkbox\"" + (user.isAdmin() ? " checked>" : ">") + "</td>");                        out.println("</tr>");                    }                } else                {                    out.println("Данных, удовлетворяющих запрос не найдено.");                }            }        } else        {            out.println("<p>");            out.println("<a href=\"index.jsp\">Вернутся на главную?</a>");            out.println("</p>");            out.println("<p>");            out.println("Данная информация доступна только администраторам! Кыш!");            out.println("</p>");        }        out.println("</body>");    }    private String distinguish(String text, String distingushText)    {        String endText = "";        if (text.contains(distingushText))        {            endText += text.substring(0, text.indexOf(distingushText));            endText += "<b>";            endText += text.substring(text.indexOf(distingushText), text.indexOf(distingushText) + distingushText.length());            endText += "</b>";            endText += text.substring(text.indexOf(distingushText) + distingushText.length(), text.length());            return endText;        } else            return text;    }    @Override    public void destroy()    {        try        {            if (rs != null)                rs.close();            if (st != null)                st.close();            if (dbi != null)                dbi.close();        } catch (SQLException e)        {            e.printStackTrace();        }    }}